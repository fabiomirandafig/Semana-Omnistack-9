[{"/home/fabio/Música/SemanaOmnistack 9/frontend/src/index.js":"1","/home/fabio/Música/SemanaOmnistack 9/frontend/src/App.js":"2","/home/fabio/Música/SemanaOmnistack 9/frontend/src/services/api.js":"3","/home/fabio/Música/SemanaOmnistack 9/frontend/src/routes.js":"4","/home/fabio/Música/SemanaOmnistack 9/frontend/src/pages/Login/index.js":"5","/home/fabio/Música/SemanaOmnistack 9/frontend/src/pages/New/index.js":"6","/home/fabio/Música/SemanaOmnistack 9/frontend/src/pages/Dashboard/index.js":"7"},{"size":145,"mtime":1613431737545,"results":"8","hashOfConfig":"9"},{"size":320,"mtime":1613437905487,"results":"10","hashOfConfig":"9"},{"size":117,"mtime":1613520861552,"results":"11","hashOfConfig":"9"},{"size":528,"mtime":1613438299679,"results":"12","hashOfConfig":"9"},{"size":1080,"mtime":1613517370677,"results":"13","hashOfConfig":"9"},{"size":2391,"mtime":1613605886349,"results":"14","hashOfConfig":"9"},{"size":1280,"mtime":1613864278963,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"shj9qb",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"18"},"/home/fabio/Música/SemanaOmnistack 9/frontend/src/index.js",[],["34","35"],"/home/fabio/Música/SemanaOmnistack 9/frontend/src/App.js",[],"/home/fabio/Música/SemanaOmnistack 9/frontend/src/services/api.js",[],["36","37"],"/home/fabio/Música/SemanaOmnistack 9/frontend/src/routes.js",[],"/home/fabio/Música/SemanaOmnistack 9/frontend/src/pages/Login/index.js",[],"/home/fabio/Música/SemanaOmnistack 9/frontend/src/pages/New/index.js",["38","39"],"import React, { useState, useEffect, useMemo} from 'react';\nimport './styles.css';\n\nimport api from '../../services/api'; \nimport camera from '../../assets/camera.svg';\n\nexport default function New({ history }) {\n    const [thumbnail, setThumbnail] = useState(null);\n    const [company, setCompany ] = useState('');\n    const [techs, setTechs ] = useState('');\n    const [price, setPrice ] = useState('');\n\n    const preview = useMemo(() => {\n        return thumbnail ? URL.createObjectURL(thumbnail) : null;\n    }, [thumbnail])\n\n    async function handleSubmit(event) {\n        event.preventDefault();\n\n        const data = new FormData();\n        const user_id = localStorage.getItem('user');\n\n        data.append('thumbnail',thumbnail);\n        data.append('company',company);\n        data.append('techs',techs);\n        data.append('price',price);\n\n        await api.post('/spots',data, {\n            headers: { user_id }\n        })\n\n        history.push('./dashboard');\n    }\n\n    return ( \n        <form onSubmit={handleSubmit}>\n            <label \n                id=\"thumbnail\"\n                style={{ backgroundImage: `url(${preview})`}}\n                className={thumbnail ? 'has-thumbnail': ''}\n            >\n                <input type=\"file\" onChange={event => setThumbnail(event.target.files[0])}/>\n                <img src={camera} alt=\"Select image\" />\n            </label>\n\n            <label htmlFor=\"company\">EMPRESA *</label>\n            <input\n                id=\"company\"\n                placeholder=\"Sua empresa incrível\"\n                value={company}\n                onChange={event => setCompany(event.target.value)}\n            />\n\n            <label htmlFor=\"company\">TECNOLOGIAS *<span>(separadas por vírgula)</span></label>\n            <input\n                id=\"techs\"\n                placeholder=\"Quais tecnologias utilizam?\"\n                value={techs}\n                onChange={event => setTechs(event.target.value)}\n            />\n\n            <label htmlFor=\"company\">VALOR DA DIÁRIA *<span>(em branco para GRATUITO)</span></label>\n            <input\n                id=\"price\"\n                placeholder=\"Valor cobrado por dia\"\n                value={price}\n                onChange={event => setPrice(event.target.value)}\n            />\n\n            <button type=\"submit\" className=\"btn\">Cadastrar</button>\n        </form>\n        \n    \n    )\n}","/home/fabio/Música/SemanaOmnistack 9/frontend/src/pages/Dashboard/index.js",["40"],"import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport socketio from 'socket.io-client';\n\nimport api from '../../services/api';\nimport './styles.css';\n\nexport default function Dashboard() {\n    const [spots, setSpots] = useState([]);\n\n    useEffect(() => {\n        const socket = socketio('http://localhost:3333');\n    },[]);\n\n    useEffect(() => {\n        async function loadSpots() {\n            const user_id = localStorage.getItem('user');\n            const response = await api.get('./dashboard', {\n                headers: { user_id }\n            });\n\n            setSpots(response.data);\n        }\n\n        loadSpots();\n    }, []);\n    \n    return (\n        <>\n            <ul className=\"spot-list\">\n                {spots.map(spot => (\n                    <li key={spot._id}>\n                        <header style={{ backgroundImage: `url(${spot.thumbnail_url})`}} />\n                        <strong>{spot.company}</strong>\n                        <span>{spot.price ? `R$${spot.price}/dia`: 'GRATUITO'}</span>\n                    </li>\n                ))}\n            </ul>    \n                <Link to=\"/new\">\n                    <button className=\"btn\">Cadastrar novo spot</button>\n                </Link>\n        </>\n    )\n}",{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"41","replacedBy":"45"},{"ruleId":"43","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":1,"column":27,"nodeType":"49","messageId":"50","endLine":1,"endColumn":36},{"ruleId":"51","severity":1,"message":"52","line":43,"column":17,"nodeType":"53","endLine":43,"endColumn":56},{"ruleId":"47","severity":1,"message":"54","line":12,"column":15,"nodeType":"49","messageId":"50","endLine":12,"endColumn":21},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],["55"],["56"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'socket' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]